version: '3.8'

services:
  jenkins:
    image: jenkins/jenkins:lts-jdk17
    container_name: jenkins
    restart: unless-stopped
    user: root  # Needed to access Docker socket
    privileged: true  # Required for Docker-in-Docker capability
    ports:
      - "8090:8080"  # Jenkins web UI
      - "50000:50000"  # Jenkins agent port
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock  # Allow Jenkins to use host Docker
      - /usr/bin/docker:/usr/bin/docker  # Mount Docker binary
      - ./jenkins-config:/var/jenkins_config
      - ./jenkins-init.sh:/usr/local/bin/jenkins-init.sh
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false -Dhudson.plugins.git.GitSCM.ALLOW_LOCAL_CHECKOUT=true
      - JENKINS_OPTS=--argumentsRealm.roles.user=admin --argumentsRealm.roles.admin=admin --argumentsRealm.passwd.admin=admin
      - CASC_JENKINS_CONFIG=/var/jenkins_config
      - TRY_UPGRADE_IF_NO_MARKER=true
      - INSTALL_PLUGINS_TIMEOUT=300
    networks:
      - jenkins-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/login"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    entrypoint: >
      /bin/sh -c "
      chmod +x /usr/local/bin/jenkins-init.sh &&
      /usr/local/bin/jenkins-init.sh &&
      /usr/local/bin/jenkins.sh"

  sonarqube:
    image: sonarqube:lts
    container_name: sonarqube
    restart: unless-stopped
    ports:
      - "9100:9000"  # Maps SonarQube's internal port 9000 to host port 9100
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    networks:
      - jenkins-network
    depends_on:
      - jenkins

networks:
  jenkins-network:
    driver: bridge
    name: jenkins-network

volumes:
  jenkins_home:
    driver: local
  sonarqube_data:
    driver: local
  sonarqube_logs:
    driver: local
  sonarqube_extensions:
    driver: local
